{"ast":null,"code":"import api from \"./api\";\nimport { history } from '../_helpers/history'; //calls the login API\n\nexport function login(username, password) {\n  return dispatch => {\n    fetch(api + '/user/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    }).then(response => response.json()).then(responseData => {\n      if (responseData.error) {\n        const {\n          error\n        } = responseData;\n        dispatch({\n          type: 'LOGIN_FAILURE',\n          error\n        });\n      } else {\n        const {\n          token,\n          userinfo\n        } = responseData;\n        localStorage.setItem(\"user-token\", token);\n        localStorage.setItem(\"userData\", JSON.stringify(userinfo));\n        const obj = {\n          id: userinfo.id,\n          name: \"Hello\",\n          data: \"dfdjfkasdjks\"\n        };\n        localStorage.setItem(\"dbdata\", obj);\n        console.log('data---', userinfo);\n        dispatch({\n          type: 'LOGIN_USER',\n          userinfo\n        });\n        dispatch({\n          type: 'LOGIN_SUCCESS',\n          userinfo\n        });\n        history.push('/myhome');\n        window.location.reload();\n      }\n    }).catch(err => {\n      alert('Network Issue');\n    });\n  };\n}\nexport function logout() {\n  return dispatch => {\n    dispatch({\n      type: 'LOGOUT_USER',\n      loggedIn: false\n    });\n  };\n}","map":{"version":3,"sources":["/var/www/html/assigment/src/actions/loginAction.js"],"names":["api","history","login","username","password","dispatch","fetch","method","headers","body","JSON","stringify","then","response","json","responseData","error","type","token","userinfo","localStorage","setItem","obj","id","name","data","console","log","push","window","location","reload","catch","err","alert","logout","loggedIn"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;AACA,SAASC,OAAT,QAAwB,qBAAxB,C,CAEA;;AACA,OAAO,SAASC,KAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmC;AAEtC,SAAQC,QAAD,IAAc;AAEjBC,IAAAA,KAAK,CACDN,GAAG,GAAC,aADH,EAED;AACIO,MAAAA,MAAM,EAAE,MADZ;AAEIC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFb;AAKIC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBR,QAAAA,QAAQ,EAAEA,QADO;AAEjBC,QAAAA,QAAQ,EAAEA;AAFO,OAAf;AALV,KAFC,CAAL,CAaKQ,IAbL,CAaUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAbtB,EAcKF,IAdL,CAcUG,YAAY,IAAI;AAEhB,UAAIA,YAAY,CAACC,KAAjB,EAAwB;AACtB,cAAM;AAACA,UAAAA;AAAD,YAAUD,YAAhB;AACAV,QAAAA,QAAQ,CAAC;AAAEY,UAAAA,IAAI,EAAE,eAAR;AAAyBD,UAAAA;AAAzB,SAAD,CAAR;AAEH,OAJC,MAIK;AAEH,cAAM;AAAEE,UAAAA,KAAF;AAAQC,UAAAA;AAAR,YAAqBJ,YAA3B;AACAK,QAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCH,KAAnC;AACAE,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCX,IAAI,CAACC,SAAL,CAAeQ,QAAf,CAAjC;AACA,cAAMG,GAAG,GAAG;AACRC,UAAAA,EAAE,EAACJ,QAAQ,CAACI,EADJ;AAERC,UAAAA,IAAI,EAAC,OAFG;AAGRC,UAAAA,IAAI,EAAC;AAHG,SAAZ;AAMAL,QAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BC,GAA/B;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBR,QAAtB;AACAd,QAAAA,QAAQ,CAAC;AAAEY,UAAAA,IAAI,EAAE,YAAR;AAAsBE,UAAAA;AAAtB,SAAD,CAAR;AACAd,QAAAA,QAAQ,CAAC;AAAEY,UAAAA,IAAI,EAAE,eAAR;AAAyBE,UAAAA;AAAzB,SAAD,CAAR;AACAlB,QAAAA,OAAO,CAAC2B,IAAR,CAAa,SAAb;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;AACJ,KAtCL,EAuCKC,KAvCL,CAuCWC,GAAG,IAAI;AACVC,MAAAA,KAAK,CAAC,eAAD,CAAL;AACH,KAzCL;AA0CH,GA5CD;AA8CH;AAED,OAAO,SAASC,MAAT,GAAkB;AACrB,SAAQ9B,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAAC;AAAEY,MAAAA,IAAI,EAAE,aAAR;AAAsBmB,MAAAA,QAAQ,EAAC;AAA/B,KAAD,CAAR;AACH,GAFD;AAIH","sourcesContent":["import api from \"./api\";\r\nimport { history } from '../_helpers/history';\r\n\r\n//calls the login API\r\nexport function login(username, password) {\r\n\r\n    return (dispatch) => {\r\n\r\n        fetch(\r\n            api+'/user/login',\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username: username,\r\n                    password: password\r\n                })\r\n            }\r\n        )\r\n            .then(response => response.json())\r\n            .then(responseData => {\r\n                  \r\n                  if (responseData.error) {\r\n                    const {error} = responseData;\r\n                    dispatch({ type: 'LOGIN_FAILURE', error });\r\n                \r\n                } else {\r\n                    \r\n                    const { token,userinfo } = responseData;\r\n                    localStorage.setItem(\"user-token\", token);\r\n                    localStorage.setItem(\"userData\", JSON.stringify(userinfo));\r\n                    const obj = {\r\n                        id:userinfo.id,\r\n                        name:\"Hello\",\r\n                        data:\"dfdjfkasdjks\"\r\n                        \r\n                    }\r\n                    localStorage.setItem(\"dbdata\", obj);\r\n                    console.log('data---',userinfo);\r\n                    dispatch({ type: 'LOGIN_USER', userinfo});\r\n                    dispatch({ type: 'LOGIN_SUCCESS', userinfo });\r\n                    history.push('/myhome');\r\n                    window.location.reload();\r\n                }\r\n            })\r\n            .catch(err => {\r\n                alert('Network Issue');\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport function logout() {\r\n    return (dispatch) => {\r\n        dispatch({ type: 'LOGOUT_USER',loggedIn:false});\r\n    }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}